import{a as e,c as t,b as o,w as n,v as a,d,F as s,r,e as i,f as l,g as c,o as h,t as u,T as p,h as m,i as f,j as y,k as g}from"./vendor.3e678fdc.js";!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver((e=>{for(const o of e)if("childList"===o.type)for(const e of o.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&t(e)})).observe(document,{childList:!0,subtree:!0})}function t(e){if(e.ep)return;e.ep=!0;const t=function(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerpolicy&&(t.referrerPolicy=e.referrerpolicy),"use-credentials"===e.crossorigin?t.credentials="include":"anonymous"===e.crossorigin?t.credentials="omit":t.credentials="same-origin",t}(e);fetch(e.href,t)}}();const N={name:"CreateNode",data:function(){return{name:"",desc:"",parent:"",ronly:"0",error:null}},props:["nodes"],emits:["createNode"],methods:{onSubmit(){this.error={},e.post("http://localhost:3001/createNode",{name:this.name,description:this.desc,parent:this.parent,ronly:this.ronly}).then((e=>{console.log("parent",this.parent),e.data>=0?alert("Successly created node with id "+e.data):alert("Meet Error!"),this.$emit("createNode",[e.data,this.name,this.desc,this.parent,this.ronly])})).catch((e=>{console.log(e)}))}}},b={style:{"background-color":"yellow"}},w=o("label",{for:"Name",class:"required"}," Name:",-1),S=o("label",{for:"Desc",class:"required"}," Description:",-1),C=o("label",{for:"Parent"}," ParentID:",-1),k=o("option",{disabled:"",value:""},"Please select one id",-1),v=o("option",{value:"0"},"0",-1),x=o("label",{for:"RO"}," Read-Only:",-1),$=o("button",{type:"submit"},"Submit",-1);N.render=function(e,p,m,f,y,g){return h(),t("div",b,[o("form",{method:"POST",id:"newNode",onSubmit:p[4]||(p[4]=c(((...e)=>g.onSubmit&&g.onSubmit(...e)),["prevent"])),enctype:"multipart/form-data"},[w,n(o("input",{"onUpdate:modelValue":p[0]||(p[0]=t=>e.name=t),id:"name",name:"Name",required:""},null,512),[[a,e.name]]),S,n(o("input",{"onUpdate:modelValue":p[1]||(p[1]=t=>e.desc=t),id:"desc",name:"Desc",required:""},null,512),[[a,e.desc]]),C,n(o("select",{"onUpdate:modelValue":p[2]||(p[2]=t=>e.parent=t)},[k,v,m.nodes?(h(!0),t(s,{key:0},r(m.nodes.slice(1),(e=>(h(),t("option",null,u(e[0]),1)))),256)):i("",!0)],512),[[d,e.parent]]),x,n(o("input",{type:"checkbox","onUpdate:modelValue":p[3]||(p[3]=t=>e.ronly=t),"true-value":"1","false-value":"0",id:"ronly",name:"RO",class:"border"},null,512),[[l,e.ronly]]),$],32)])};const D={name:"UpdateNode",data:function(){return{name:""}},emits:["updateNode"],methods:{onSubmit(){this.$emit("updateNode",this.name)}}},I={style:{"background-color":"yellow"}},T=o("label",{for:"Name",class:"required"}," Name:",-1),E=o("button",{type:"submit"},"Update Node",-1);D.render=function(e,d,s,r,i,l){return h(),t("div",I,[o("form",{method:"POST",id:"updateNode",onSubmit:d[1]||(d[1]=c(((...e)=>l.onSubmit&&l.onSubmit(...e)),["prevent"])),enctype:"multipart/form-data"},[T,n(o("input",{"onUpdate:modelValue":d[0]||(d[0]=t=>e.name=t),id:"newName",name:"Name",required:""},null,512),[[a,e.name]]),E],32)])};const O={name:"TreeExample",components:{Tree:p,CreateNode:N,UpdateNode:D},data:function(){return{loading:!1,data:null,error:null,updateId:null,updateShow:!1,createShow:!1,treeDisplayData:[]}},mounted(){this.$refs["my-tree"].expandNode(1),this.fetchData()},watch:{data(e){console.log("datechanged!"),this.treeDisplayData=this.newTree(e)}},methods:{fetchData(){this.error=this.data=null,this.loading=!0,e.get("http://localhost:3001/get").then((e=>{this.loading=!1,this.data=e.data})).catch((e=>{this.loading=!1,console.log(e)}))},newTree(e){let t=[];for(let o=1;o<e.length;o++)if("0"==e[o][3]){let n={id:e[o][0],text:e[o][1],definition:e[o][2],checkable:!1,state:{checked:!1,selected:!1,expanded:!1},readonly:e[o][4],nodes:[]};t.push(n)}else this.dfs(t,e[o]);return t},dfs(e,t){for(let o=0;o<e.length;o++){if(e[o].id==t[3]){let n={id:t[0],text:t[1],checkable:!1,definition:t[2],state:{checked:!1,selected:!1,expanded:!1},readonly:t[4],nodes:[]};return void e[o].nodes.push(n)}this.dfs(e[o].nodes,t)}},myCheckedFunction:function(e,t){console.log(`is ${e} checked ? ${t}`),console.log(this.$refs["my-tree"].getCheckedNodes("id")),console.log(this.$refs["my-tree"].getCheckedNodes("text"))},mySelectedFunction:function(e,t){console.log(`is ${e} selected ? ${t}`),console.log(this.$refs["my-tree"].getSelectedNode())},updateNode:function(e){e.readonly>0?(alert("Sorry, this node is read-only!"),this.updateShow=!1):this.updateId==e.id&&this.updateShow?this.updateShow=!1:(this.updateShow=!0,this.updateId=e.id)},showCreate:function(){0==this.createShow?(document.getElementById("showCreate").innerHTML="Cancel",this.createShow=!0):(document.getElementById("showCreate").innerHTML="Create new node",this.createShow=!1)},updateNodeName:function(t){this.$refs["my-tree"].findNode(this.updateId).text=t;for(let e=0;e<this.data.length;e++)this.data[e][0]==this.updateId&&(this.data[e][1]=t);e.post("http://localhost:3001/updateNode",{id:this.updateId,name:t}).then((e=>{"success"==e.data?alert("Successly update the node."):alert("Meet Error!")})).catch((e=>{console.log(e)}))},deleteNode:function(t){if(t.readonly>0)alert("Sorry, this node is read-only!");else{const o=this.$refs["my-tree"].findNodePath(t.id).slice(-2,-1)[0];if(void 0===o){const e=this.$refs["my-tree"].nodes.findIndex((e=>e.id==t.id));console.log(e),this.$refs["my-tree"].nodes.splice(e,1)}else{const e=this.$refs["my-tree"].findNode(o),n=e.nodes.findIndex((e=>e.id==t.id));e.nodes.splice(n,1)}for(let e=1;e<this.data.length;e++)this.data[e][0]==t.id&&this.data.splice(e,1);e.post("http://localhost:3001/deleteNode",{id:t.id}).then((e=>{"success"==e.data?alert("Successly deleted the node."):alert("Meet Error!")})).catch((e=>{console.log(e)}))}},createNode:function(e){e[3],e[0],e[1],e[2],e[4],this.data.push(e),this.data=JSON.parse(JSON.stringify(this.data))},download:function(){e.get("http://localhost:3001/download").then((e=>{const t=document.createElement("a");t.href="data:text/csv;charset=utf-8,"+encodeURIComponent(e.data),t.target="_blank",t.download="tree_data.csv",t.click()})).catch((e=>{console.log(e)}))}},computed:{myCustomStyles:()=>({tree:{style:{height:"auto",maxHeight:"300px",overflowY:"visible",display:"inline-block",textAlign:"left"}},row:{style:{width:"500px",cursor:"pointer"},child:{class:"",style:{height:"35px"},active:{style:{height:"35px"}}}},rowIndent:{paddingLeft:"20px"},text:{style:{},active:{style:{"font-weight":"bold",color:"#2ECC71"}}}}),myCustomOptions(){return{treeEvents:{expanded:{state:!1},collapsed:{state:!1},selected:{state:!0,fn:this.mySelectedFunction},checked:{state:!1,fn:this.myCheckedFunction}},events:{expanded:{state:!0},selected:{state:!0},checked:{state:!0},editableName:{state:!0,calledEvent:"expanded"}},addNode:{state:!1,fn:this.createNode,appearOnHover:!1},editNode:{state:!0,fn:this.updateNode,appearOnHover:!1},deleteNode:{state:!0,fn:this.deleteNode,appearOnHover:!0},showTags:!0}}}},U={style:{"background-color":"#c5cbe3"}},q=o("h1",{style:{"background-color":"DodgerBlue",color:"white",margin:"0"}}," The tree ",-1),L=o("p",null," Click the triangle to expand or collapse the tree. Click 'pen' icon to edit or cancel editing the name of the node. Click 'x' icon to delete the node and its children nodes. Some nodes are read-only and cannot be updated or deleted. ",-1);O.render=function(e,n,a,d,s,r){const l=m("Tree"),c=m("CreateNode"),u=m("UpdateNode");return h(),t("div",U,[q,L,f(l,{id:"my-tree-id",ref:"my-tree","custom-options":r.myCustomOptions,"custom-styles":r.myCustomStyles,nodes:e.treeDisplayData},null,8,["custom-options","custom-styles","nodes"]),e.createShow?(h(),y(c,{key:0,nodes:e.data,onCreateNode:r.createNode},null,8,["nodes","onCreateNode"])):i("",!0),e.updateShow?(h(),y(u,{key:1,onUpdateNode:r.updateNodeName},null,8,["onUpdateNode"])):i("",!0),o("button",{id:"showCreate",type:"submit",onClick:n[0]||(n[0]=(...e)=>r.showCreate&&r.showCreate(...e))}," Create new node "),o("button",{type:"submit",onClick:n[1]||(n[1]=(...e)=>r.download&&r.download(...e))},"Download CSV file")])};const P={name:"App",components:{TreeExample:O,CreateNode:N}},H={id:"app"};P.render=function(e,o,n,a,d,s){const r=m("TreeExample");return h(),t("div",H,[f(r)])},g(P).mount("#app");
